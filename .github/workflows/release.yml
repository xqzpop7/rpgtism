name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}"
  builds:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        include:
            - name: Linux 64x
              os: ubuntu-latest
              filename: ${{ github.event.repository.name }}-linux-64x
              extension: ""
            - name: MacOS 64x
              os: macOS-latest
              filename: ${{ github.event.repository.name }}-macos-64x
              extension: ""
            - name: Windows 64x
              os: windows-latest
              filename: ${{ github.event.repository.name }}-windows-64x
              extension: .exe

    steps:
    - uses: actions/checkout@v4
    - name: Restore cache
      uses: actions/cache@v4.2.3
      with:
        path: ./target
        key: rust-release-target-${{ matrix.os }}
    - name: Install dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install g++ pkg-config libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0 libwayland-dev libxkbcommon-dev
    - name: Build
      run: cargo build --release --verbose
    - name: Zip Linux & MacOS
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'
      run: zip -r ${{ matrix.filename }}.zip ./assets && zip -j ${{ matrix.filename }}.zip ./target/release/${{ github.event.repository.name }}${{ matrix.extension }}
    - name: Zip Windows
      if: matrix.os == 'windows-latest'
      run: Compress-Archive ./assets, ./target/release/${{ github.event.repository.name }}${{ matrix.extension }} ${{ matrix.filename }}.zip
    - name: Upload
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
      run: | 
        gh release upload "$tag" \
            ${{ matrix.filename }}.zip
